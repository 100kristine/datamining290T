name: inverse
layout: true
class: left, top, inverse

---

# Lab: mrjob

  + Understand ```review_word_count.py```
  + Find review with most unique words
    + Fill in ```unique_review.py```
  + Find similar users
    + Write ```user_similarity.py```

???

## mrjob

  + Using the Yelp Academic Dataset
  + In lecture, we covered the steps for most unique words
  + Use Jaccard similarity for user\_similarity

---

# Data

  + ischool: ```~jretz/yelp_academic_dataset.json```
  + May copy or use in place

???

## Agreement

  + Data set only for use academic purposes
  + [Yelp Dataset](http://www.yelp.com/academic_dataset)

---

# Understand review\_word\_count.py

```bash
$ python review_word_count.py yelp_academic_dataset.json

no configs found; falling back on auto-configuration
creating tmp directory /tmp/review_word_count.jimmy.20130215.071901.095847
reading from file
> /home/jimmy/src/datamining290/code/venv/bin/python review_word_count.py --step-num=0 --mapper /tmp/review_word_count.jimmy.20130215.071901.095847/input_part-00000
writing to /tmp/review_word_count.jimmy.20130215.071901.095847/step-0-mapper_part-00000
Counters from step 1:
  (no counters found)
...
Streaming final output from /tmp/review_word_count.jimmy.20130215.071901.095847/output
"4" 2
"5" 1
"50"  1
"6" 2
"7" 2
"70s" 1
"9" 2
"a" 46
"abbey" 4
"able"  1
"about" 4
```

---

# Fill in unique\_review.py

  + Mutli-step map reduce
  + Steps are explained in lecture
  + Skeleton in code

---

# Write user\_similarity.py

  + Find users >= 0.5 similarity
  + User Similarity: Jaccard similarity of businesses reviewed
  + {BizA, BizB, BizC} ~ {BizF, BizB, BizG}




---

Slide 1
  main
  notes
Slide 2
  main
  notes
    check link
Slide 3
  main
Slide 4
  main
Slide 5
  main
Headings are the right level?
